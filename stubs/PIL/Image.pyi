# Type stubs for PIL.Image module
from typing import Any, Union, Optional, Tuple, IO
from pathlib import Path

class Image:
    @property
    def size(self) -> Tuple[int, int]: ...
    
    @property
    def mode(self) -> str: ...
    
    @property
    def width(self) -> int: ...
    
    @property
    def height(self) -> int: ...
    
    def save(self, fp: Union[str, Path, IO[bytes]], format: Optional[str] = ..., **params: Any) -> None: ...
    def resize(self, size: Tuple[int, int], resample: Any = ...) -> "Image": ...
    def convert(self, mode: str = ..., matrix: Any = ..., dither: Any = ..., palette: Any = ..., colors: Any = ...) -> "Image": ...
    def crop(self, box: Tuple[int, int, int, int]) -> "Image": ...
    def rotate(self, angle: float, resample: Any = ..., expand: bool = ..., center: Any = ..., translate: Any = ..., fillcolor: Any = ...) -> "Image": ...

def open(fp: Union[str, Path, IO[bytes]], mode: str = "r") -> Image: ...
def fromarray(obj: Any, mode: Optional[str] = ...) -> Image: ...
def new(mode: str, size: Tuple[int, int], color: Any = ...) -> Image: ...

# Common image formats
LANCZOS: int
BICUBIC: int
BILINEAR: int
NEAREST: int
