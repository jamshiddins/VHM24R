# Type stubs for pdfplumber
from typing import Any, List, Optional, Union
from pathlib import Path

class PDF:
    def __init__(self, file: Any, **kwargs: Any) -> None: ...
    def __enter__(self) -> PDF: ...
    def __exit__(self, *args: Any) -> None: ...
    def close(self) -> None: ...
    
    @property
    def pages(self) -> List[Page]: ...
    
    @property
    def metadata(self) -> dict[str, Any]: ...

class Page:
    def extract_text(self, **kwargs: Any) -> Optional[str]: ...
    def extract_tables(self, **kwargs: Any) -> List[List[List[Optional[str]]]]: ...
    def extract_table(self, **kwargs: Any) -> Optional[List[List[Optional[str]]]]: ...
    def crop(self, bbox: tuple[float, float, float, float]) -> Page: ...
    def filter(self, test_function: Any) -> Page: ...
    
    @property
    def width(self) -> float: ...
    
    @property
    def height(self) -> float: ...
    
    @property
    def bbox(self) -> tuple[float, float, float, float]: ...

def open(path_or_fp: Union[str, Path, Any], **kwargs: Any) -> PDF: ...
