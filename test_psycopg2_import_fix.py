#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–º–ø–æ—Ä—Ç–∞ psycopg2 –≤ models.py
"""

def test_psycopg2_import():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–∞ psycopg2 –±–µ–∑ –æ—à–∏–±–æ–∫ Pylance"""
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º models.py
        import models
        
        print("‚úÖ –ò–º–ø–æ—Ä—Ç models.py —É—Å–ø–µ—à–µ–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ psycopg2 –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
        if hasattr(models, 'psycopg2'):
            if models.psycopg2 is not None:
                print("‚úÖ psycopg2 –¥–æ—Å—Ç—É–ø–µ–Ω")
            else:
                print("‚ö†Ô∏è  psycopg2 –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è fallback")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ RealDictCursor –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
        if hasattr(models, 'RealDictCursor'):
            if models.RealDictCursor is not None:
                print("‚úÖ RealDictCursor –¥–æ—Å—Ç—É–ø–µ–Ω")
            else:
                print("‚ö†Ô∏è  RealDictCursor –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è fallback")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ Database
        try:
            db = models.Database()
            print("‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ Database —É—Å–ø–µ—à–Ω–æ")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
            if db.is_postgres:
                print("‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è PostgreSQL")
            else:
                print("‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è SQLite")
                
            db.close()
            print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î –∑–∞–∫—Ä—ã—Ç–æ")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ Database: {e}")
        
        return True
        
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        return False
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False


if __name__ == "__main__":
    print("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–º–ø–æ—Ä—Ç–∞ psycopg2...")
    print("=" * 50)
    
    success = test_psycopg2_import()
    
    print("=" * 50)
    if success:
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print("‚úÖ –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è Pylance –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —É—Å—Ç—Ä–∞–Ω–µ–Ω—ã")
    else:
        print("‚ùå –¢–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã")
    
    print("\n–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:")
    print("- –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ # type: ignore –ø–æ–¥–∞–≤–ª—è—é—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è Pylance")
    print("- –ö–æ–¥ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∫–∞–∫ —Å psycopg2, —Ç–∞–∫ –∏ –±–µ–∑ –Ω–µ–≥–æ")
    print("- –ü—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ psycopg2 –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è SQLite")
